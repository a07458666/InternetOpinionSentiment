version: '3.2'
services:
  lab18-prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitor/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      # Map port 9090 inside the container to port 19090 on the host
      - 19090:9090
    depends_on:
      - lab18-mongodb-exporter
    restart: always
    networks:
        - app-network

  lab18-grafana:
    image: grafana/grafana:8.3.6
    volumes:
      - ./monitor/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitor/dashboard-provider.yml:/etc/grafana/provisioning/dashboards/dashboard-provider.yml
      - ./monitor/dashboard-node-exporter.json:/var/lib/grafana/dashboards/demo/dashboard-node-exporter.json
    depends_on:
      - lab18-prometheus
    ports:
      - 13000:3000
    networks:
        - app-network
    
  lab18-mongodb:
    image: mongo
    volumes: 
      - ./monitor/mongodb:/data/db
    ports:
      - 27017:27017
    environment:
      # provide your credentials here
      - MONGO_INITDB_ROOT_USERNAME=***
      - MONGO_INITDB_ROOT_PASSWORD=***
    networks:
        - app-network

  lab18-mongodb-exporter:
    image: percona/mongodb_exporter:0.32.0
    restart: always
    depends_on:
      - lab18-mongodb
    ports:
      - 9216:9216
    networks:
      - app-network
      # app-network:
      #   aliases:
      #   - 'mongodb-service'
    command: --mongodb.uri mongodb://lab18:ec131b@lab18-mongodb:27017 --mongodb.collstats-colls=keyword_tab.keyword_col --compatible-mode=1

  lab18-crawler:
    build:
      dockerfile: Dockerfile
      context: ./crawler/
    depends_on:
      - lab18-prometheus
      - lab18-crawler-exporter
    networks:
        - app-network
    # ports:
    #   - 8111:8111
    #   - 8777:8777
    command: sleep infinity

  lab18-crawler-exporter:
    build:
      dockerfile: Dockerfile
      context: ./monitor/
    depends_on:
      - lab18-prometheus
    networks:
        - app-network
    ports:
      - 8111:8111
      - 8777:8777
    container_name: lab18-crawler-exporter

  # Need Add APIServer/cfg/db_config.json First
  api_server:
    build:
      context: ./APIServer/
      dockerfile: Dockerfile
    container_name: api_server
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "23000:3000"
    networks:
      - app-network
      
  # Need Add PageServer/my-app/src/config.json First
  page_server:
    build:
      context: ./PageServer/
      dockerfile: Dockerfile
    container_name: page_server
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3000
    command: 
        - sh
        - -c
        - cd my-app;NODE_OPTIONS=--openssl-legacy-provider npm run build;cp -r ./build ..;cd ..;npm run start 
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge